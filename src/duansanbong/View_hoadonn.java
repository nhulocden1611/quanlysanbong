/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package duansanbong;

import Model.HoaDon;
import Repositories.HoaDonRepo;
import Utils.DBConneet;
import java.sql.Connection;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.jfree.ui.HorizontalAlignment;

import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author nguye
 */
public class View_hoadonn extends javax.swing.JPanel {

    private Connection con;
    private HoaDonRepo hd = new HoaDonRepo();
    private DefaultTableModel mol = new DefaultTableModel();
    private int i = -1;

    /**
     * Creates new form View_hoadonn
     */
    public View_hoadonn() {
        initComponents();
        loadTableLD((ArrayList<HoaDon>) hd.getBangHoaDon());

        Timer timer = new Timer(10000, e -> refreshTable()); // 10 giây
        timer.start();
        refreshTable();
    }

    private void refreshTable() {
        mol.setRowCount(0); // Xóa dữ liệu hiện tại trong bảng

        String query = "SELECT \n"
                + "    HD.IdHoaDon, \n"
                + "    KH.HoTenKH, \n"
                + "    HD.NgayDat, \n"
                + "    DL.TenSan, \n"
                + "    HD.GiaThue, \n"
                + "    KM.TenTruongTrinhKM, \n"
                + "    KM.GiaTriGiam, \n"
                + "    HD.TinhTrangThanhToan, \n"
                + "    HD.TongTien\n"
                + "FROM HoaDon HD\n"
                + "INNER JOIN KhachHang KH ON HD.IdKhachHang = KH.IdKhachHang\n"
                + "INNER JOIN DatLichSanBong DL ON HD.IdKhachHang = DL.IdKhachHang\n"
                + "LEFT JOIN ChuongTrinhKhuyenMai KM ON HD.IdKhuyenMai = KM.IdKhuyenMai\n"
                + "ORDER BY HD.IdHoaDon;";

        try (Connection conn = DBConneet.getConnection(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(query)) {

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("IdHoaDon"),
                    rs.getString("HoTenKH"),
                    rs.getString("NgayDat"),
                    rs.getString("TenSan"),
                    rs.getDouble("GiaThue"),
                    rs.getString("TenTruongTrinhKM"),
                    rs.getDouble("GiaTriGiam"),
                    rs.getString("TinhTrangThanhToan"),
                    rs.getDouble("TongTien"),};
                mol.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu: " + e.getMessage());
        }
    }

    private void loadTableLD(ArrayList<HoaDon> list) {
        mol = (DefaultTableModel) tblHoaDon.getModel();
        mol.setRowCount(0);//xoa dl cu trong bang
        //them dong vao bang
        for (HoaDon x : list) {
            mol.addRow(x.toDatarow());
        }
    }

    public void showtabledv(int i) {
        txtidHoaDon.setText(tblHoaDon.getValueAt(i, 0).toString());
        txthoten.setText(tblHoaDon.getValueAt(i, 1).toString());
        txtNgaylap.setText(tblHoaDon.getValueAt(i, 2).toString());
        txttensan.setText(tblHoaDon.getValueAt(i, 3).toString());
        txtgiathue.setText(tblHoaDon.getValueAt(i, 4).toString());
        txttenkm.setText(tblHoaDon.getValueAt(i, 5).toString());
        txtgiatrikm.setText(tblHoaDon.getValueAt(i, 6).toString());
        txttttt.setText(tblHoaDon.getValueAt(i, 7).toString());
        txtthanhTien.setText(tblHoaDon.getValueAt(i, 8).toString());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel45 = new javax.swing.JPanel();
        jPanel46 = new javax.swing.JPanel();
        txttimkiem = new javax.swing.JTextField();
        btnseach = new javax.swing.JButton();
        jPanel47 = new javax.swing.JPanel();
        jPanel48 = new javax.swing.JPanel();
        jPanel49 = new javax.swing.JPanel();
        jPanel50 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbldvkh = new javax.swing.JTable();
        jLabel42 = new javax.swing.JLabel();
        jPanel52 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        txtidHoaDon = new javax.swing.JTextField();
        txthoten = new javax.swing.JTextField();
        txttensan = new javax.swing.JTextField();
        txtthanhTien = new javax.swing.JTextField();
        btnin = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNgaylap = new javax.swing.JTextField();
        txttttt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtgiathue = new javax.swing.JTextField();
        txttenkm = new javax.swing.JTextField();
        txtgiatrikm = new javax.swing.JTextField();

        jPanel45.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnseach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        btnseach.setText("Seach");
        btnseach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnseachActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel47Layout = new javax.swing.GroupLayout(jPanel47);
        jPanel47.setLayout(jPanel47Layout);
        jPanel47Layout.setHorizontalGroup(
            jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel47Layout.setVerticalGroup(
            jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel48Layout = new javax.swing.GroupLayout(jPanel48);
        jPanel48.setLayout(jPanel48Layout);
        jPanel48Layout.setHorizontalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 494, Short.MAX_VALUE)
        );
        jPanel48Layout.setVerticalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 378, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel46Layout = new javax.swing.GroupLayout(jPanel46);
        jPanel46.setLayout(jPanel46Layout);
        jPanel46Layout.setHorizontalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel46Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel46Layout.createSequentialGroup()
                        .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnseach))
                    .addGroup(jPanel46Layout.createSequentialGroup()
                        .addComponent(jPanel48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel46Layout.setVerticalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel46Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnseach))
                .addGroup(jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel46Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jPanel47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel46Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel49.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel38.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel38.setText("Thông tin hóa đơn");

        javax.swing.GroupLayout jPanel50Layout = new javax.swing.GroupLayout(jPanel50);
        jPanel50.setLayout(jPanel50Layout);
        jPanel50Layout.setHorizontalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel50Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel38)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel50Layout.setVerticalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel50Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel38)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID hóa đơn", "Họ tên khách hàng", "Ngày đặt", "Tên sân ", "Giá thuê", "Tên Khuyến Mãi", "Giá trị giảm", "Tình trạng thanh toán", "Tổng tiền"
            }
        ));
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        tbldvkh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tên dịch vụ", "Phí dịch vụ"
            }
        ));
        jScrollPane2.setViewportView(tbldvkh);

        jLabel42.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel42.setText("Thông tin dịch vụ");

        javax.swing.GroupLayout jPanel49Layout = new javax.swing.GroupLayout(jPanel49);
        jPanel49.setLayout(jPanel49Layout);
        jPanel49Layout.setHorizontalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel49Layout.createSequentialGroup()
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel49Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel49Layout.createSequentialGroup()
                        .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel49Layout.createSequentialGroup()
                                .addGap(309, 309, 309)
                                .addComponent(jLabel42))
                            .addGroup(jPanel49Layout.createSequentialGroup()
                                .addGap(294, 294, 294)
                                .addComponent(jPanel50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 362, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel49Layout.setVerticalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel49Layout.createSequentialGroup()
                .addComponent(jPanel50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jPanel52.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel39.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel39.setText("Thông tin hóa đơn chi tiết");

        jLabel40.setText("ID Hóa đơn");

        jLabel41.setText("Họ và tên khách hàng");

        jLabel43.setText("Tên Sân");

        jLabel44.setText("Thành tiền");

        txtthanhTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtthanhTienActionPerformed(evt);
            }
        });

        btnin.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        btnin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/InHoaDonicon.png"))); // NOI18N
        btnin.setText("In hóa đơn");
        btnin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninActionPerformed(evt);
            }
        });

        jLabel3.setText("Ngày đặt");

        jLabel4.setText("Tình trạng thanh toán");

        txtNgaylap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgaylapActionPerformed(evt);
            }
        });

        txttttt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtttttActionPerformed(evt);
            }
        });

        jLabel2.setText("Giá Thuê");

        jLabel5.setText("Giá trị KM");

        jLabel6.setText("Tên khuyến mãi");

        javax.swing.GroupLayout jPanel52Layout = new javax.swing.GroupLayout(jPanel52);
        jPanel52.setLayout(jPanel52Layout);
        jPanel52Layout.setHorizontalGroup(
            jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel52Layout.createSequentialGroup()
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel52Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jLabel39))
                    .addGroup(jPanel52Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(btnin, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel52Layout.createSequentialGroup()
                        .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel52Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jLabel44))
                            .addGroup(jPanel52Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6))
                            .addGroup(jPanel52Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5))
                            .addGroup(jPanel52Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4))
                            .addGroup(jPanel52Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2))
                            .addGroup(jPanel52Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel43))
                            .addGroup(jPanel52Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3))
                            .addGroup(jPanel52Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel41))
                            .addGroup(jPanel52Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel40)))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtidHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txthoten, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtthanhTien, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                .addComponent(txtgiathue, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                .addComponent(txtNgaylap)
                                .addComponent(txttensan)
                                .addComponent(txtgiatrikm, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                .addComponent(txttenkm)
                                .addComponent(txttttt)))))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel52Layout.setVerticalGroup(
            jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel52Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel39)
                .addGap(43, 43, 43)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(txtidHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txthoten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41))
                .addGap(11, 11, 11)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNgaylap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txttensan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel43))
                .addGap(18, 18, 18)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtgiathue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txttenkm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtgiatrikm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txttttt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(txtthanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnin, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel45Layout = new javax.swing.GroupLayout(jPanel45);
        jPanel45.setLayout(jPanel45Layout);
        jPanel45Layout.setHorizontalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel45Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel46, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel45Layout.setVerticalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel45Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel46, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jPanel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnseachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnseachActionPerformed
        String keyword = txttimkiem.getText().trim();
        ArrayList<HoaDon> ketQuaTimKiem = hd.timKiem(keyword);

        if (ketQuaTimKiem.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy kết quả phù hợp.");
        } else {
            // Load lại bảng hiển thị kết quả tìm kiếm
            loadTableLD(ketQuaTimKiem);
        }
    }//GEN-LAST:event_btnseachActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        i = tblHoaDon.getSelectedRow();
        this.showtabledv(i);
        int row = tblHoaDon.getSelectedRow();
        if (row >= 0) {
            int idKHoaDon = (int) tblHoaDon.getValueAt(row, 0); // Lấy IdKhachHang từ cột đầu tiên của hàng được chọn

            // Gọi phương thức để tải dữ liệu dịch vụ
            loadDichVuData(idKHoaDon);
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void txtNgaylapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgaylapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgaylapActionPerformed

    private void btninActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninActionPerformed
   HoaDonRepo hoaDonRepo = new HoaDonRepo();
    List<HoaDon> danhSachHoaDon = hoaDonRepo.getBangHoaDon();

    // Xây dựng Workbook và Sheet
    XSSFWorkbook workbook = new XSSFWorkbook();
    XSSFSheet sheet = workbook.createSheet("Hoa Don");

    // Thêm tiêu đề cho tài liệu
    XSSFRow titleRow = sheet.createRow(0);
    XSSFCell titleCell = titleRow.createCell(0);
    titleCell.setCellValue("HÓA ĐƠN");
    XSSFCellStyle titleStyle = workbook.createCellStyle();
    
    XSSFFont titleFont = workbook.createFont();
    titleFont.setBold(true);
    titleFont.setFontHeightInPoints((short) 14);
    titleStyle.setFont(titleFont);
    titleCell.setCellStyle(titleStyle);

    // Tạo một hàng trống để phân cách tiêu đề
    sheet.createRow(1);

    // Đặt tiêu đề cột cho dữ liệu của tblHoaDon
    XSSFRow headerHoaDon = sheet.createRow(2);
    String[] columnsHoaDon = {"ID Hóa Đơn", "Tên Khách Hàng", "Ngày Đặt", "Tên Sân", "Giá Thuê", "Tên Chương Trình KM", "Giá Trị KM", "Tình Trạng Thanh Toán", "Tổng Tiền"};
    XSSFCellStyle headerStyle = workbook.createCellStyle();
    
    headerStyle.setFillForegroundColor(IndexedColors.GREY_25_PERCENT.getIndex());
    headerStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
    XSSFFont headerFont = workbook.createFont();
    headerFont.setBold(true);
    headerStyle.setFont(headerFont);

    for (int i = 0; i < columnsHoaDon.length; i++) {
        XSSFCell cell = headerHoaDon.createCell(i);
        cell.setCellValue(columnsHoaDon[i]);
        cell.setCellStyle(headerStyle);
    }

    // Lấy hàng được chọn từ bảng tblHoaDon
    int selectedRowHoaDon = tblHoaDon.getSelectedRow();
    if (selectedRowHoaDon != -1) {
        DefaultTableModel modelHoaDon = (DefaultTableModel) tblHoaDon.getModel();

        // Điền dữ liệu hàng được chọn vào sheet
        int rowIndex = 3;
        XSSFRow row = sheet.createRow(rowIndex++);
        for (int j = 0; j < modelHoaDon.getColumnCount(); j++) {
            XSSFCell cell = row.createCell(j);
            Object value = modelHoaDon.getValueAt(selectedRowHoaDon, j);
            if (value instanceof String) {
                cell.setCellValue((String) value);
            } else if (value instanceof Integer) {
                cell.setCellValue((Integer) value);
            } else if (value instanceof Double) {
                cell.setCellValue((Double) value);
            }
        }
    }

    // Thêm khoảng cách giữa dữ liệu của tblHoaDon và dữ liệu của tbldvkh
    int rowIndex = sheet.getLastRowNum() + 2;

    // Đặt tiêu đề cột cho dữ liệu của tbldvkh
    XSSFRow headerDichVu = sheet.createRow(rowIndex++);
    String[] columnsDichVu = {"Tên Dịch Vụ", "Phí Dịch Vụ"};
    for (int i = 0; i < columnsDichVu.length; i++) {
        XSSFCell cell = headerDichVu.createCell(i);
        cell.setCellValue(columnsDichVu[i]);
cell.setCellStyle(headerStyle);
    }

    // Lấy tất cả các hàng được chọn từ bảng tbldvkh
    int[] selectedRowsDichVu = tbldvkh.getSelectedRows();
    DefaultTableModel modelDichVu = (DefaultTableModel) tbldvkh.getModel();
    for (int selectedRowDichVu : selectedRowsDichVu) {
        XSSFRow row = sheet.createRow(rowIndex++);
        for (int j = 0; j < modelDichVu.getColumnCount(); j++) {
            XSSFCell cell = row.createCell(j);
            Object value = modelDichVu.getValueAt(selectedRowDichVu, j);
            if (value instanceof String) {
                cell.setCellValue((String) value);
            } else if (value instanceof Integer) {
                cell.setCellValue((Integer) value);
            } else if (value instanceof Double) {
                cell.setCellValue((Double) value);
            }
        }
    }

    // Xuất workbook ra file Excel
    String filePath = "A://DuAn1//Book1.xlsx";
    try (FileOutputStream fileOut = new FileOutputStream(filePath)) {
        workbook.write(fileOut);
        JOptionPane.showMessageDialog(this, "Xuất Excel thành công!");

        // Đóng Workbook
        workbook.close();

        // Mở file Excel sau khi xuất thành công
        java.awt.Desktop.getDesktop().open(new java.io.File(filePath));
    } catch (IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi xuất Excel: " + e.getMessage());
    }
    }//GEN-LAST:event_btninActionPerformed

    private void txtthanhTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtthanhTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtthanhTienActionPerformed

    private void txtttttActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtttttActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtttttActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnin;
    private javax.swing.JButton btnseach;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTable tbldvkh;
    private javax.swing.JTextField txtNgaylap;
    private javax.swing.JTextField txtgiathue;
    private javax.swing.JTextField txtgiatrikm;
    private javax.swing.JTextField txthoten;
    private javax.swing.JTextField txtidHoaDon;
    private javax.swing.JTextField txttenkm;
    private javax.swing.JTextField txttensan;
    private javax.swing.JTextField txtthanhTien;
    private javax.swing.JTextField txttimkiem;
    private javax.swing.JTextField txttttt;
    // End of variables declaration//GEN-END:variables

    public void loadDichVuData(int idKHoaDon) {
        String query = "SELECT \n"
                + "    dv.TenDV,\n"
                + "    dv.PhiDV\n"
                + "FROM \n"
                + "    DichVu dv\n"
                + "INNER JOIN \n"
                + "    HoaDonChiTiet hddt ON dv.IdDichVu = hddt.IdDichVu\n"
                + "INNER JOIN \n"
                + "    HoaDon hd ON hddt.IdHoaDon = hd.IdHoaDon\n"
                + "WHERE \n"
                + "    hd.IdHoaDon = ?;";

        try {
            if (con == null) {
                // Initialize the database connection here
                con = DBConneet.getConnection();
            }

            PreparedStatement ps = con.prepareStatement(query);
            ps.setInt(1, idKHoaDon);
            ResultSet rs = ps.executeQuery();

            DefaultTableModel model = (DefaultTableModel) tbldvkh.getModel();
            model.setRowCount(0); // Clear the old data

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("TenDV"),
                    rs.getDouble("PhiDV")
                });
            }
        } catch (SQLException e) {
            System.err.println("SQL Exception: " + e.getMessage());
            e.printStackTrace();
        } catch (NullPointerException e) {
            System.err.println("NullPointerException: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
