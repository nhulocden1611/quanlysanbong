/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package duansanbong;

import Model.HoaDon;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import Repositories.HoaDonRepo;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;

import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author nguye
 */
public class view_thongke extends javax.swing.JPanel {

    private int i = -1;
    private boolean errorDisplayed = false;
    private List<HoaDon> hoadon;
    private DefaultTableModel Model;

    /**
     *
     * @author nguye
     */
    private DefaultCategoryDataset dataset;
    private JFreeChart chart;
    private CategoryPlot plot;
    private ChartPanel chartpanel;

    public view_thongke() {
        initComponents();
        this.hoadon = new ArrayList<>();
       
        loadHoaDonData();
          this.showpiechart();
        Model = (DefaultTableModel) tblthongke.getModel();
        showtable();
        tong();

        // Thêm hành động cho các nút tính toán
        btntimkiem.addActionListener(evt -> btntimkiemActionPerformed(evt));
        btntimkiemt.addActionListener(evt -> btntimkiemtActionPerformed(evt));
        ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(
                new String[]{"tháng 1", "tháng 2", "tháng 3", "tháng 4", "tháng 5", "tháng 6", "tháng 7", "tháng 8", "tháng 9", "tháng 10", "tháng 11", "tháng 12"}
        ));
             // Khởi tạo Timer để gọi phương thức refreshTable() mỗi 5 giây
    Timer timer = new Timer(5000, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            refreshTable();
        }
    });
    timer.start();
    
    // Gọi refreshTable() ngay lập tức khi khởi tạo
    refreshTable();
    }
    private void refreshTable() {
    // Lấy dữ liệu hóa đơn từ cơ sở dữ liệu
    loadHoaDonData();
    
    // Xóa toàn bộ các dòng trong bảng hiện tại
    Model.setRowCount(0);
    
    // Duyệt qua danh sách hóa đơn và thêm từng dòng vào bảng
    for (HoaDon hd : hoadon) {
        Model.addRow(new Object[]{
            tblthongke.getRowCount() + 1,
            hd.getNgayDat(),
            hd.getTongTien()
        });
    }
    
    // Cập nhật tổng doanh thu
    tong();
}
private void loadHoaDonData() {
    // Giả định rằng HoaDonRepo là class để lấy dữ liệu từ database
    hoadon = new HoaDonRepo().getBangHoaDon();
}

 public void showpiechart() {
    dataset = new DefaultCategoryDataset();

    // Tạo một map để lưu trữ doanh thu theo tháng và năm
    Map<String, Map<String, Double>> revenueMap = new HashMap<>();

    // Duyệt qua danh sách hóa đơn để điền dữ liệu vào map
    for (HoaDon hd : hoadon) {
        String[] parts = hd.getNgayDat().split("-");
        String nam = parts[0];
        String thang = parts[1];
        double doanhThu = hd.getTongTien();

        // Nếu map chưa có key là năm, tạo một map mới cho năm đó
        revenueMap.putIfAbsent(nam, new HashMap<>());

        // Cập nhật doanh thu cho tháng trong năm
        revenueMap.get(nam).put(thang, revenueMap.get(nam).getOrDefault(thang, 0.0) + doanhThu);
    }

    // Thêm dữ liệu vào dataset cho từng tháng từ 1 đến 12 và các năm có trong map
    Set<String> years = revenueMap.keySet();
    for (String nam : years) {
        for (int i = 1; i <= 12; i++) {
            String thang = String.format("%02d", i);
            double doanhThu = revenueMap.get(nam).getOrDefault(thang, 0.0);
            dataset.addValue(doanhThu, thang, nam);
        }
    }

    // Tạo biểu đồ
    chart = ChartFactory.createBarChart("Doanh thu theo tháng", "Tháng", "Triệu", dataset, PlotOrientation.VERTICAL, true, true, false);
    
    plot = chart.getCategoryPlot();
    
    chartpanel = new ChartPanel(chart);
    thongke.removeAll();
    thongke.add(chartpanel, BorderLayout.CENTER);
    thongke.validate();
    
    plot.setBackgroundPaint(new Color(150, 210, 140));
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tongthang = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblthongke = new javax.swing.JTable();
        jLabeltong = new javax.swing.JLabel();
        txttimkiem = new javax.swing.JTextField();
        btntimkiem = new javax.swing.JButton();
        btntimkiemt = new javax.swing.JButton();
        tongngay = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        thongke = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Thống Kê Doanh thu");

        tblthongke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Hóa Đơn", "Ngày Đặt", "Tổng tiền"
            }
        ));
        tblthongke.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblthongkeMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblthongke);

        jLabeltong.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabeltong.setText("Tổng doanh thu :");

        btntimkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        btntimkiem.setText("Tìm Kiếm theo ngày");
        btntimkiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemActionPerformed(evt);
            }
        });

        btntimkiemt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        btntimkiemt.setText("Tìm kiếm theo tháng");
        btntimkiemt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimkiemtActionPerformed(evt);
            }
        });

        tongngay.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        tongngay.setText("Tổng Doanh Thu Ngày : ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel4.setText("Tổng Doanh Thu Tháng :");

        ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 599, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout tongthangLayout = new javax.swing.GroupLayout(tongthang);
        tongthang.setLayout(tongthangLayout);
        tongthangLayout.setHorizontalGroup(
            tongthangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tongthangLayout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tongthangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tongthangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tongthangLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tongthangLayout.createSequentialGroup()
                        .addGroup(tongthangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tongthangLayout.createSequentialGroup()
                                .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btntimkiem))
                            .addGroup(tongthangLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(tongthangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tongngay)
                                    .addComponent(jLabeltong)
                                    .addComponent(jLabel4))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btntimkiemt)))
                .addGroup(tongthangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tongthangLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tongthangLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        tongthangLayout.setVerticalGroup(
            tongthangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tongthangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(tongthangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tongthangLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tongthangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btntimkiem)
                            .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tongthangLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tongthangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btntimkiemt)
                            .addComponent(ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(tongthangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tongthangLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tongthangLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabeltong)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tongngay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(42, 42, 42))
        );

        thongke.setLayout(new java.awt.BorderLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Biểu đồ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel5)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 144, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(tongthang, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(thongke, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(thongke, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tongthang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(445, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btntimkiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemActionPerformed
  
        String ngay = txttimkiem.getText();
        if (isValidDate(ngay)) {
            tongTheoNgay(ngay);
            errorDisplayed = false; // Reset the flag when a valid date is entered
        } else if (!errorDisplayed) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập ngày tháng năm theo định dạng yyyy-MM-dd");
            errorDisplayed = true; // Set the flag to indicate error message is displayed
        }
    }

    private boolean isValidDate(String date) {
        String regex = "^\\d{4}-\\d{2}-\\d{2}$";
        return date.matches(regex);
    }

    private void tongTheoNgay(String ngay) {
        List<HoaDon> filteredHoaDon = new ArrayList<>();
        for (HoaDon hd : hoadon) {
            if (hd.getNgayDat().equals(ngay)) {
                filteredHoaDon.add(hd);
            }
        }

        Model.setRowCount(0);
        for (HoaDon hd : filteredHoaDon) {
            Model.addRow(new Object[]{
                tblthongke.getRowCount() + 1,
                hd.getNgayDat(),
                hd.getTongTien()
            });
        }

        double tongDoanhThuNgay = filteredHoaDon.stream().mapToDouble(HoaDon::getTongTien).sum();
        tongngay.setText("Tổng Doanh Thu Ngày : " + tongDoanhThuNgay);

    }//GEN-LAST:event_btntimkiemActionPerformed

    private void tblthongkeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblthongkeMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblthongkeMouseClicked

    private void btntimkiemtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimkiemtActionPerformed
         //TODO add your handling code here:
        int thang = ComboBox1.getSelectedIndex() + 1;
        int nam = Calendar.getInstance().get(Calendar.YEAR);
        tongTheoThang(thang, nam);
        List<HoaDon> filteredHoadon = new ArrayList<>();
        for (HoaDon hd : hoadon) {
            String[] parts = hd.getNgayDat().split("-");
            int hdThang = Integer.parseInt(parts[1]);
            int hdNam = Integer.parseInt(parts[0]);
            if (hdThang == thang && hdNam == nam) {
                filteredHoadon.add(hd);
            }
        }

        // Clear the table
        Model.setRowCount(0);

        // If there is data for the selected month, populate the table
        if (!filteredHoadon.isEmpty()) {
            for (HoaDon hd : filteredHoadon) {
                Model.addRow(new Object[]{
                    tblthongke.getRowCount() + 1,
                    hd.getNgayDat(),
                    hd.getTongTien()
                });
            }
        }

    }//GEN-LAST:event_btntimkiemtActionPerformed

    private void ComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBox1;
    private javax.swing.JButton btntimkiem;
    private javax.swing.JButton btntimkiemt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabeltong;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable tblthongke;
    private javax.swing.JPanel thongke;
    private javax.swing.JLabel tongngay;
    private javax.swing.JPanel tongthang;
    private javax.swing.JTextField txttimkiem;
    // End of variables declaration//GEN-END:variables

    private void showtable() {
        hoadon = new HoaDonRepo().getBangHoaDon();
        Model.setRowCount(0);
        for (HoaDon hd : hoadon) {
            Model.addRow(new Object[]{
                tblthongke.getRowCount() + 1,
                hd.getNgayDat(), // Hiển thị ngày đặt từ đối tượng HoaDon
                hd.getTongTien()
            });
        }
    }

    private void tong() {
        DecimalFormat x = new DecimalFormat("###,###,###");
        double tong = 0.0; // Sử dụng kiểu double để xử lý số thập phân
        for (int i = 0; i < tblthongke.getRowCount(); i++) {
            String value = tblthongke.getValueAt(i, 2).toString();
            try {
                // Chuyển đổi giá trị chuỗi thành số thập phân
                double number = Double.parseDouble(value);
                tong += number;
            } catch (NumberFormatException e) {
                System.err.println("Giá trị không hợp lệ: " + value);
                // Xử lý lỗi hoặc bỏ qua giá trị không hợp lệ
            }
        }
        jLabeltong.setText("Tổng doanh thu: " + x.format(tong) + " VND");
    }

   
    private void tongTheoThang(int thang, int nam) {
        DecimalFormat x = new DecimalFormat("###,###,###");
        double tong = 0.0;
        for (HoaDon hd : hoadon) {
            String[] parts = hd.getNgayDat().split("-");
            int hdThang = Integer.parseInt(parts[1]);
            int hdNam = Integer.parseInt(parts[0]);
            if (hdThang == thang && hdNam == nam) {
                tong += hd.getTongTien();
            }
        }
        jLabel4.setText("Tổng doanh thu tháng " + thang + "/" + nam + ": " + x.format(tong) + " VND");
    }

}
